#include "configuration.h"

#include <SmingCore.h>
#include <Services/CommandProcessing/CommandProcessingIncludes.h>

SenseConfig ActiveConfig;


SenseConfig loadConfig()
{
	DynamicJsonDocument doc(1024);
	SenseConfig cfg;
	if(Json::loadFromFile(doc, SENSE_CONFIG_FILE)) {
		JsonObject network = doc["network"];
		cfg.NetworkSSID = network["ssid"].as<const char*>();
		cfg.NetworkPassword = network["password"].as<const char*>();
	
		JsonObject syspar = doc["system"];	
		cfg.factory = syspar["factory"];
		cfg.lastBoot = syspar["lastboot"].as<const char*>();

		// JsonObject correction = doc["correction"];
		// cfg.AddT = correction["T"];
		// cfg.AddRH = correction["RH"];
		// cfg.AddTZ = correction["TZ"];

		// JsonObject trigger = doc["trigger"];
		// cfg.Trigger = TriggerType(trigger["type"].as<int>());
		// cfg.RangeMin = trigger["min"];
		// cfg.RangeMax = trigger["max"];
	} else {
		cfg.NetworkSSID = WIFI_SSID;
		cfg.NetworkPassword = WIFI_PWD;
		cfg.factory = 1;
		cfg.lastBoot = 0;
	}
	return cfg;
}

void saveConfig(SenseConfig& cfg)
{
	ActiveConfig = cfg;

	DynamicJsonDocument doc(1024);
	auto network = doc.createNestedObject("network");
	network["ssid"] = cfg.NetworkSSID;
	network["password"] = cfg.NetworkPassword;

	auto system = doc.createNestedObject("system");
	system["factory"] = cfg.factory;
	system["lastboot"] = cfg.lastBoot;
	
	// auto correction = doc.createNestedObject("correction");
	// correction["T"] = cfg.AddT;
	// correction["RH"] = cfg.AddRH;
	// correction["TZ"] = cfg.AddTZ;

	// auto trigger = doc.createNestedObject("trigger");
	// trigger["type"] = (int)cfg.Trigger;
	// trigger["min"] = cfg.RangeMin;
	// trigger["max"] = cfg.RangeMax;

	Json::saveToFile(doc, SENSE_CONFIG_FILE, Json::Pretty);
}

void printConfig(DynamicJsonDocument &_doc)
{
	_doc["activessid"] =  ActiveConfig.NetworkSSID;
	_doc["activepwd"] =  ActiveConfig.NetworkPassword;

}

void deleteConfig()
{
	fileDelete(SENSE_CONFIG_FILE);
	system_restart();
}